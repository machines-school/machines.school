---
import "../styles/global.css";
import type { CollectionEntry } from "astro:content";
import Header from "../components/Header.astro";
import TableOfContents from "../components/TableOfContents.astro";

type Props = {
  title: string;
  description: string;
  featuredImage?: {
    url: string;
    alt: string;
  };
  author: string;
  xAccount: string;
  date: string;
  headings?: { depth: number; slug: string; text: string }[];
};

const {
  title,
  description,
  featuredImage,
  author,
  xAccount,
  date,
  headings = [],
} = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} | Machines School Blog</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
      integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
      crossorigin="anonymous"
    />
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined') {
          const localStorageTheme = localStorage.getItem("theme");
          if (["dark", "light"].includes(localStorageTheme)) {
            return localStorageTheme;
          }
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      if (typeof localStorage !== 'undefined') {
        localStorage.setItem("theme", theme);
      }
    </script>
  </head>
  <body class="bg-white dark:bg-black text-gray-900 dark:text-gray-100">
    <Header />
    <main class="mt-16 py-16 container mx-auto">
      {
        featuredImage && (
          <div class="mb-12">
            <img
              src={featuredImage.url}
              alt={featuredImage.alt}
              class="w-full h-[240px] md:h-[680px] object-cover rounded-xl md:rounded-4xl"
            />
          </div>
        )
      }

      <div class="flex flex-col lg:flex-row gap-12">
        <article class="prose mx-auto lg:max-w-[65ch]">
          <h1 class="text-3xl md:text-5xl font-bold leading-snug text-gray-900 dark:text-gray-100">{title}</h1>
          <p class="text-lg md:text-2xl text-gray-500 dark:text-gray-400">{description}</p>
          <slot />
        </article>
        <aside class="lg:w-64 shrink-0">
          <div class="sticky top-24">
            <TableOfContents headings={headings} />

            <div class="mt-8 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
              <h3
                class="text-xs font-semibold text-gray-600 dark:text-gray-300 tracking-wide mb-3"
              >
                Author
              </h3>
              <div>
                <div>
                  <a
                    href={`https://x.com/${xAccount.slice(1)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-gray-900 dark:text-gray-100 hover:text-gray-600 dark:hover:text-gray-300"
                  >
                    {author}
                  </a>
                </div>
                <div class="text-sm text-gray-500 dark:text-gray-400">
                  <time datetime={date}>
                    {
                      new Date(date).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })
                    }
                  </time>
                </div>
              </div>
            </div>
          </div>
        </aside>
      </div>
    </main>
  </body>
</html>
